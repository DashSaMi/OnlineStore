{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/saman/OneDrive/Desktop/OnlineStore/dashboard/src/lib/api.js"],"sourcesContent":["//src/lib/api.js\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || 'http://localhost:3000/api';\r\n\r\n/**\r\n * Fetches all products from the API\r\n * @returns {Promise<Array>} Array of products\r\n * @throws {Error} If the request fails\r\n */\r\nconst fetchProducts = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/products`, {\r\n      cache: 'no-store' // Important for fresh data\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.message || 'Failed to fetch products');\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('fetchProducts error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Fetches a single product by ID\r\n * @param {string} id - Product ID\r\n * @returns {Promise<Object>} Product data\r\n * @throws {Error} If the request fails\r\n */\r\nconst fetchProductById = async (id) => {\r\n  try {\r\n    if (!id) {\r\n      throw new Error('Product ID is required');\r\n    }\r\n\r\n    const response = await fetch(`${API_BASE_URL}/products/${id}`, {\r\n      cache: 'no-store'\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.message || `Product ${id} not found`);\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`fetchProductById error for ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Fetches all orders (admin only)\r\n * @returns {Promise<Array>} Array of orders\r\n * @throws {Error} If the request fails\r\n */\r\nconst fetchOrders = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/orders`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${process.env.NEXT_PUBLIC_ADMIN_SECRET}`\r\n      },\r\n      cache: 'no-store'\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.message || 'Failed to fetch orders');\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('fetchOrders error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Creates a new product\r\n * @param {Object} productData - Product data to create\r\n * @returns {Promise<Object>} Created product\r\n * @throws {Error} If the request fails\r\n */\r\nconst createProduct = async (productData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/admin/products`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${process.env.NEXT_PUBLIC_ADMIN_SECRET}`\r\n      },\r\n      body: JSON.stringify(productData)\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.message || 'Failed to create product');\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('createProduct error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Updates an existing product\r\n * @param {string} id - Product ID to update\r\n * @param {Object} productData - Updated product data\r\n * @returns {Promise<Object>} Updated product\r\n * @throws {Error} If the request fails\r\n */\r\nconst updateProduct = async (id, productData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/admin/products/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${process.env.NEXT_PUBLIC_ADMIN_SECRET}`\r\n      },\r\n      body: JSON.stringify(productData)\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.message || 'Failed to update product');\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`updateProduct error for ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Deletes a product\r\n * @param {string} id - Product ID to delete\r\n * @returns {Promise<Object>} Deletion confirmation\r\n * @throws {Error} If the request fails\r\n */\r\nconst deleteProduct = async (id) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/admin/products/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Authorization': `Bearer ${process.env.NEXT_PUBLIC_ADMIN_SECRET}`\r\n      }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(errorData.message || 'Failed to delete product');\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`deleteProduct error for ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Explicit named exports\r\nexport {\r\n  fetchProducts,\r\n  fetchProductById,\r\n  fetchOrders,\r\n  createProduct,\r\n  updateProduct,\r\n  deleteProduct\r\n};\r\n\r\n// Default export\r\nexport default {\r\n  fetchProducts,\r\n  fetchProductById,\r\n  fetchOrders,\r\n  createProduct,\r\n  updateProduct,\r\n  deleteProduct\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/saman/OneDrive/Desktop/OnlineStore/dashboard/src/app/dashboard/page.js"],"sourcesContent":["//app/dashboard/page.js\r\nimport { fetchProducts, fetchOrders } from '@/lib/api';\r\n\r\nexport default async function DashboardPage() {\r\n  try {\r\n    const [products, orders] = await Promise.all([\r\n      fetchProducts(),\r\n      fetchOrders()\r\n    ]);\r\n\r\n    return `\r\n      <div class=\"p-4\">\r\n        <h1 class=\"text-2xl font-bold mb-6\">Dashboard Overview</h1>\r\n        \r\n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\r\n          <div class=\"bg-white p-6 rounded-lg shadow\">\r\n            <h2 class=\"text-lg font-semibold mb-2\">Total Products</h2>\r\n            <p class=\"text-3xl font-bold\">${products.length}</p>\r\n          </div>\r\n          \r\n          <div class=\"bg-white p-6 rounded-lg shadow\">\r\n            <h2 class=\"text-lg font-semibold mb-2\">Total Orders</h2>\r\n            <p class=\"text-3xl font-bold\">${orders.length}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  } catch (error) {\r\n    return `\r\n      <div class=\"p-4 bg-red-50 text-red-700 rounded-lg\">\r\n        <h2 class=\"text-xl font-bold mb-2\">Error Loading Dashboard</h2>\r\n        <p>${error.message}</p>\r\n        <button onclick=\"window.location.reload()\" class=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded\">\r\n          Try Again\r\n        </button>\r\n      </div>\r\n    `;\r\n  }\r\n}"],"names":[],"mappings":"AAAA,uBAAuB;;;;AACvB;;AAEe,eAAe;IAC5B,IAAI;QACF,MAAM,CAAC,UAAU,OAAO,GAAG,MAAM,QAAQ,GAAG,CAAC;YAC3C,CAAA,GAAA,iHAAA,CAAA,gBAAa,AAAD;YACZ,CAAA,GAAA,iHAAA,CAAA,cAAW,AAAD;SACX;QAED,OAAO,CAAC;;;;;;;0CAO8B,EAAE,SAAS,MAAM,CAAC;;;;;0CAKlB,EAAE,OAAO,MAAM,CAAC;;;;IAItD,CAAC;IACH,EAAE,OAAO,OAAO;QACd,OAAO,CAAC;;;WAGD,EAAE,MAAM,OAAO,CAAC;;;;;IAKvB,CAAC;IACH;AACF","debugId":null}}]
}