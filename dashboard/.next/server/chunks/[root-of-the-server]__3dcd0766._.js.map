{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/saman/OneDrive/Desktop/OnlineStore/dashboard/src/lib/mongodb.js"],"sourcesContent":["// src/lib/mongodb.js (Port 3001)\r\nimport { MongoClient } from 'mongodb'\r\n\r\nconst uri = process.env.MONGODB_URI\r\nconst options = {}\r\n\r\nlet client\r\nlet clientPromise\r\n\r\nif (!process.env.MONGODB_URI) {\r\n  throw new Error('Please add your Mongo URI to .env.local')\r\n}\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  if (!global._mongoClientPromise) {\r\n    client = new MongoClient(uri, options)\r\n    global._mongoClientPromise = client.connect()\r\n  }\r\n  clientPromise = global._mongoClientPromise\r\n} else {\r\n  client = new MongoClient(uri, options)\r\n  clientPromise = client.connect()\r\n}\r\n\r\nexport async function getDatabase() {\r\n  const client = await clientPromise\r\n  return { db: client.db() }\r\n}"],"names":[],"mappings":"AAAA,iCAAiC;;;;;;;;;;AAGjC,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,MAAM,UAAU,CAAC;AAEjB,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;IAC5B,MAAM,IAAI,MAAM;AAClB;AAEA,wCAA4C;IAC1C,IAAI,CAAC,4CAAO,mBAAmB,EAAE;QAC/B,SAAS,IAAI,YAAY,KAAK;QAC9B,4CAAO,mBAAmB,GAAG,OAAO,OAAO;IAC7C;IACA,gBAAgB,4CAAO,mBAAmB;AAC5C;;AAKO,eAAe;IACpB,MAAM,SAAS,MAAM;IACrB,OAAO;QAAE,IAAI,OAAO,EAAE;IAAG;AAC3B","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/saman/OneDrive/Desktop/OnlineStore/dashboard/src/app/api/admin/products/route.js"],"sourcesContent":["import { getDatabase } from '@/lib/mongodb';\r\n\r\nexport async function GET() {\r\n  try {\r\n    const { db } = await getDatabase();\r\n    const products = await db.collection('products')\r\n      .find({})\r\n      .limit(50)\r\n      .toArray();\r\n\r\n    return new Response(JSON.stringify({\r\n      data: products.map(p => ({\r\n        ...p,\r\n        _id: p._id.toString(),\r\n        createdAt: p.createdAt?.toISOString(),\r\n        updatedAt: p.updatedAt?.toISOString()\r\n      }))\r\n    }), {\r\n      status: 200,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n  } catch (error) {\r\n    return new Response(JSON.stringify({\r\n      error: 'Failed to fetch products'\r\n    }), {\r\n      status: 500,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,CAAA,GAAA,uHAAA,CAAA,cAAW,AAAD;QAC/B,MAAM,WAAW,MAAM,GAAG,UAAU,CAAC,YAClC,IAAI,CAAC,CAAC,GACN,KAAK,CAAC,IACN,OAAO;QAEV,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YACjC,MAAM,SAAS,GAAG,CAAC,CAAA,IAAK,CAAC;oBACvB,GAAG,CAAC;oBACJ,KAAK,EAAE,GAAG,CAAC,QAAQ;oBACnB,WAAW,EAAE,SAAS,EAAE;oBACxB,WAAW,EAAE,SAAS,EAAE;gBAC1B,CAAC;QACH,IAAI;YACF,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;QACF;IACF,EAAE,OAAO,OAAO;QACd,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YACjC,OAAO;QACT,IAAI;YACF,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;QACF;IACF;AACF","debugId":null}}]
}